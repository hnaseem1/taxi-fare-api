<style media="screen">
  .modal {
    display: none;
    position:   fixed;
    z-index:    1000;
    top:        0;
    left:       0;
    height:     100%;
    width:      100%;
    background: rgba( 255, 255, 255, .8 )
                url('http://i.stack.imgur.com/FhHRx.gif')
                50% 50%
                no-repeat;
  }

  /* When the body has the loading class, we turn
   the scrollbar off with overflow:hidden */
  body.loading .modal {
    overflow: hidden;
  }

  /* Anytime the body has the loading class, our
   modal element will be visible */
  body.loading .modal {
    display: block;
  }
</style>

<div class="modal" id="loader">

</div>

<div class="search-field">
  <%= form_tag(google_path, :method => "get") do %>
    <h2>Start location</h2>
    <p>
      <%= text_field_tag :start_location, params[:start_location], class: "input-field", id: "autocomplete", placeholder: "Enter your address", type:"text" %>
      <button type="button" name="button" id='get-location-data'>Get Location</button>
    </p>

    <h2>Destination</h2>
    <p>
      <%= text_field_tag :end_location, params[:end_location], class: "input-field", id: "autocomplete2", placeholder: "Enter your address", type:"text" %>
      <button type="button" name="button" id='get-location-data2'>Get Location</button>
    </p>

    <p><%= submit_tag "Run Baby, RUN!!!", class: "submit"%></p>

    <% if flash[:error] %>
      <p><%= flash[:error] %></p>
    <% end %>
  <% end %>
</div>

<div id="map" style="display: none"></div>

<div class="result" id="div_result">

</div>

<script>

  // setting up event listener on the start field for getting current location
        var loader = document.getElementById('loader');
        var locationButton = document.getElementById('get-location-data')
        locationButton.addEventListener('click', function() {

          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                myposition = position
               var pos = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
                };

      // ajax call to google maps to find readible address from location data

              response = $.ajax({
                url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng='+pos.lat+', '+pos.lng+'&key=AIzaSyDxHtxeT7TcaPqz8y2tPRWbqIwB9ROdZfk',
                method: 'GET',
                dataType: 'json'
              }).done(function(data) {


                document.getElementById('autocomplete').value = response.responseJSON.results[0].formatted_address
              });

            })
          }
        })

    // setting up event listener on the destination field for getting current location

      var locationButton2 = document.getElementById('get-location-data2')
      locationButton2.addEventListener('click', function() {

        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
              myposition = position
             var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

        // ajax call to google maps to find readible address from location data

            response = $.ajax({
              url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng='+pos.lat+', '+pos.lng+'&key=AIzaSyDxHtxeT7TcaPqz8y2tPRWbqIwB9ROdZfk',
              method: 'GET',
              dataType: 'json'
            }).done(function(data) {
              document.getElementById('autocomplete2').value = response.responseJSON.results[0].formatted_address

            });
          })
        }
      })

        var autocomplete, autocomplete2;

        function initAutocomplete() {
          // Create the autocomplete object, restricting the search to geographical

          // location types.

          autocomplete2 = new google.maps.places.Autocomplete(
              /** @type {!HTMLInputElement} */(document.getElementById('autocomplete2')),
              {types: ['geocode']});

          autocomplete = new google.maps.places.Autocomplete(
              /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
              {types: ['geocode']});

              // initMap()

        }

      // function to initiate maps with point a to point b

        function initMap() {
                var directionsService = new google.maps.DirectionsService;
                var directionsDisplay = new google.maps.DirectionsRenderer;
                var map = new google.maps.Map(document.getElementById('map'), {
                  zoom: 9,
                  center: {lat: 43.7151, lng: -79.4362}
                });
                directionsDisplay.setMap(map);

                var onChangeHandler = function() {
                  calculateAndDisplayRoute(directionsService, directionsDisplay);

                };
                document.getElementById('autocomplete').addEventListener('change', onChangeHandler);
                document.getElementById('autocomplete2').addEventListener('change', onChangeHandler);
                onChangeHandler()
                document.getElementById('map').style.display = ''

              }

              function calculateAndDisplayRoute(directionsService, directionsDisplay) {
                directionsService.route({
                  origin: document.getElementById('autocomplete').value,
                  destination: document.getElementById('autocomplete2').value,
                  travelMode: 'DRIVING'
                }, function(response, status) {
                  if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                  }
                });
              }

        // finding geolocation



          // setting up event listener on submit location Button

          var submit = document.querySelector('.submit')
          submit.addEventListener('click', function(event) {
            loader.style.display = "block";
            event.preventDefault();

            // get start lat and lon using google API

            var start_address = document.getElementById('autocomplete').value
            var start_cordinates = $.ajax({
              url: "https://maps.googleapis.com/maps/api/geocode/json?address="+start_address+'&key=AIzaSyDxHtxeT7TcaPqz8y2tPRWbqIwB9ROdZfk',
              get: 'GET'
            }).done(function() {

              var start_lat = start_cordinates.responseJSON.results[0].geometry.location.lat
              var start_lon = start_cordinates.responseJSON.results[0].geometry.location.lng
              console.log('start location');

                // get start lat and lon using google API

                var end_address = document.getElementById('autocomplete2').value
                var end_cordinates = $.ajax({
                  url: "https://maps.googleapis.com/maps/api/geocode/json?address="+end_address+'&key=AIzaSyDxHtxeT7TcaPqz8y2tPRWbqIwB9ROdZfk',
                  get: 'GET'

                }).done(function() {

                  var end_lat = end_cordinates.responseJSON.results[0].geometry.location.lat
                  var end_lon = end_cordinates.responseJSON.results[0].geometry.location.lng
                  console.log('end location');

                // get the data from taxi-fare-api

                  var response = $.ajax({

                      url: 'http://localhost:3000/price/show?sl='+start_lat+'&slon='+start_lon+'&el='+end_lat+'&elon='+end_lon+'',
                      method: 'GET',
                      dataType: 'json',

                  }).done(function(data) {

                    // to enable maps
                    initMap()

                    // to hide loading page
                    loader.style.display = "none";

                    // to show the UBER rides
                    var result = document.getElementById('div_result')
                    for (var i = 0; i < data.uber.length; i++) {
                      var div = document.createElement("div")
                      var h3 = document.createElement("h3")
                      var fare = document.createElement("p")
                      var currency = document.createElement("p")

                      h3.innerText = data.uber[i].type
                      currency.innerText = "$ " + data.uber[i].currency + " " + data.uber[i].fare
                      div.classList.add("uber_ride", data.uber[i].type.replace(/\s/g, ''))
                      div.style.border = "1px solid darkblue"
                      div.appendChild(h3)
                      div.appendChild(currency)
                      result.appendChild(div)
                      }

                      // to show the LYFT rides

                      for (var i = 0; i < data.lyft.length; i++) {
                        var div = document.createElement("div")
                        var h3 = document.createElement("h3")
                        var fare = document.createElement("p")
                        var currency = document.createElement("p")
                        h3.innerText = data.lyft[i].type
                        currency.innerText = "$ " + data.lyft[i].currency + " " + data.lyft[i].fare
                        div.classList.add("lyft_ride", data.lyft[i].type.replace(/\s/g, ''))
                        div.style.border = "1px solid pink"
                        div.appendChild(h3)
                        div.appendChild(currency)
                        result.appendChild(div)
                        }
                    })
                  })
              })

            })

      </script>

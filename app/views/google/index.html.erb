<div class="modal" id="loader">

</div>

<div class="search-field">
  <%= form_tag(google_path, :method => "get" ) do %>
    <p>
      <%= text_field_tag :start_location, params[:start_location], class: "input-field", id: "autocomplete", placeholder: "Enter your address", type:"text" %>

        <button type="button" name="button" id='get-location-data' class="location-button">GET</button>
        <%= image_tag "http://i.stack.imgur.com/FhHRx.gif", class: 'location-loader1' %>

    </p>

    <p>
      <%= text_field_tag :end_location, params[:end_location], class: "input-field", id: "autocomplete2", placeholder: "Enter your address", type:"text" %>

        <button type="button" name="button" id='get-location-data2' class="location-button">GET</button>
        <%= image_tag "http://i.stack.imgur.com/FhHRx.gif", class: 'location-loader2' %>
    </p>

    <p><%= submit_tag "Search", class: "submit"%></p>

    <% if flash[:error] %>
      <p><%= flash[:error] %></p>
    <% end %>
  <% end %>
</div>
<p id="total"></p>
<div id="map" style="display: none"></div>

<div class="result" id="div_result">

</div>

<script>

  // setting up event listener on the start field for getting current location
        var loader = document.getElementById('loader');
        var locationButton = document.getElementById('get-location-data')
        var inputField = document.getElementById('autocomplete')
        locationButton.addEventListener('click', function() {
          inputField.disabled = true;
          inputField.placeholder = 'Getting your location...'
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                myposition = position
               var pos = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
                };

      // ajax call to google maps to find readible address from location data

              response = $.ajax({
                url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng='+pos.lat+', '+pos.lng+'&key=AIzaSyDxHtxeT7TcaPqz8y2tPRWbqIwB9ROdZfk',
                method: 'GET',
                dataType: 'json'
              }).done(function(data) {

                inputField.disabled = false;
                inputField.value = response.responseJSON.results[0].formatted_address
              });

            })
          }
        })

    // setting up event listener on the destination field for getting current location

      var locationButton2 = document.getElementById('get-location-data2')
      var inputField2 = document.getElementById('autocomplete2')
      locationButton2.addEventListener('click', function() {
        inputField2.disabled = true;
        inputField2.placeholder = 'Getting your location...'
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
              myposition = position
             var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

        // ajax call to google maps to find readible address from location data

            response = $.ajax({
              url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng='+pos.lat+', '+pos.lng+'&key=AIzaSyDxHtxeT7TcaPqz8y2tPRWbqIwB9ROdZfk',
              method: 'GET',
              dataType: 'json'
            }).done(function(data) {
              inputField2.disabled = false;
              inputField2.value = response.responseJSON.results[0].formatted_address

            });
          })
        }
      })

        var autocomplete, autocomplete2;

        function initAutocomplete() {
          // Create the autocomplete object, restricting the search to geographical

          // location types.

          autocomplete2 = new google.maps.places.Autocomplete(
              /** @type {!HTMLInputElement} */(document.getElementById('autocomplete2')),
              {types: ['geocode']});

          autocomplete = new google.maps.places.Autocomplete(
              /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
              {types: ['geocode']});

              // initMap()

        }

      // function to initiate maps with point a to point b


      function initMap() {
              var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 4,
                center: {lat: 43.6867, lng: -79.3682}  // Australia.
              });

              var directionsService = new google.maps.DirectionsService;
              var directionsDisplay = new google.maps.DirectionsRenderer({
                draggable: true,
                map: map,
              });

              directionsDisplay.addListener('directions_changed', function() {
                computeTotalDistance(directionsDisplay.getDirections());
                document.getElementById('autocomplete').value = myroute.legs[0].start_address
                document.getElementById('autocomplete2').value = myroute.legs[0].end_address
              });

            ori = document.getElementById('autocomplete').value,
            dest = document.getElementById('autocomplete2').value,

              displayRoute(ori, dest, directionsService,
                  directionsDisplay);
            }

            function displayRoute(origin, destination, service, display) {
              service.route({
                origin: origin,
                destination: destination,
                travelMode: 'DRIVING',
              }, function(response, status) {
                if (status === 'OK') {

                document.getElementById('map').style.display = ''

                  display.setDirections(response);
                } else {
                  alert('Could not display directions due to: ' + status);
                }
              });
            }

            function computeTotalDistance(result) {
              var total = 0;
              myroute = result.routes[0];
              for (var i = 0; i < myroute.legs.length; i++) {
                total += myroute.legs[i].distance.value;
              }
              total = total / 1000;
              document.getElementById('total').innerHTML = 'Distance' + total + ' km';
            }


          // setting up event listener on submit location Button

          var submit = document.querySelector('.submit')
          submit.addEventListener('click', function (event) {
            event.preventDefault();
            apis_requests()
          })


          function apis_requests() {

            var startField = document.getElementById('autocomplete').value
            var destinastionField = document.getElementById('autocomplete2').value
            if (startField && destinastionField) {


            loader.style.display = "block";

            // get start lat and lon using google API

            start_address = document.getElementById('autocomplete').value
            var start_cordinates = $.ajax({
              url: "https://maps.googleapis.com/maps/api/geocode/json?address="+start_address+'&key=AIzaSyDxHtxeT7TcaPqz8y2tPRWbqIwB9ROdZfk',
              get: 'GET'
            }).done(function() {

              start_lat = start_cordinates.responseJSON.results[0].geometry.location.lat
              start_lon = start_cordinates.responseJSON.results[0].geometry.location.lng

                // get start lat and lon using google API

                end_address = document.getElementById('autocomplete2').value
                var end_cordinates = $.ajax({
                  url: "https://maps.googleapis.com/maps/api/geocode/json?address="+end_address+'&key=AIzaSyDxHtxeT7TcaPqz8y2tPRWbqIwB9ROdZfk',
                  get: 'GET'

                }).done(function() {

                  end_lat = end_cordinates.responseJSON.results[0].geometry.location.lat
                  end_lon = end_cordinates.responseJSON.results[0].geometry.location.lng
                // get the data from taxi-fare-api

                  var response = $.ajax({

                      url: 'http://localhost:3000/price/show?sl='+start_lat+'&slon='+start_lon+'&el='+end_lat+'&elon='+end_lon+'',
                      method: 'GET',
                      dataType: 'json',

                  }).done(function(data) {

                    // removes the results from the previous request if there is any
                    $(".uber_ride").remove();
                    $(".lyft_ride").remove();

                    // to enable maps
                    initMap()

                    // to hide loading page
                    loader.style.display = "none";

                    // display all the results
                    displayAll(data)

                    // Display lowest
                    // displayInAscOrder(data)


                    // Display only SUV
                    // Display car for 4 people
                    // Display car for 6 people
                    // Display car for more than 6 people
                    // Display only Pool Options


                  })
                })
              })
            }}

            function displayAll(data) {
              // to show the UBER rides
              var result = document.getElementById('div_result')
              for (var i = 0; i < data.uber.length; i++) {
                var div = document.createElement("div")
                var h3 = document.createElement("h3")
                var fare = document.createElement("p")
                var currency = document.createElement("p")
                var eta = document.createElement("p")
                var request_link = document.createElement("a")
                var request_button = document.createElement("button")

                h3.innerText = data.uber[i].type
                currency.innerText = "$ " + data.uber[i].currency + " " + data.uber[i].fare
                eta.innerText = "Arrival Time " + data.uber[i].eta/60 + " Mins"
                div.classList.add("uber_ride", data.uber[i].type.replace(/\s/g, ''))
                div.style.border = "1px solid darkblue"
                request_link.setAttribute('target', '_blank')
                request_link.setAttribute('href', 'https://m.uber.com/?action=setPickup&pickup[latitude]=' + start_lat + '&pickup[longitude]=' + start_lon + '&pickup[formatted_address]=' + start_address + '&dropoff[latitude]=' + end_lat + '&dropoff[longitude]=' + end_lon + '&dropoff[formatted_address]=' + end_address)
                request_button.innerText = 'Request my UBER'
                request_link.appendChild(request_button)
                div.appendChild(h3)
                div.appendChild(currency)
                div.appendChild(eta)
                div.appendChild(request_link)
                result.appendChild(div)
                }

                // to show the LYFT rides

                for (var i = 0; i < data.lyft.length; i++) {
                  var possible_rides = ["Lyft Line", "Lyft", "Lyft Plus",]
                  var div = document.createElement("div")
                  var h3 = document.createElement("h3")
                  var fare = document.createElement("p")
                  var currency = document.createElement("p")
                  var eta = document.createElement("p")
                  h3.innerText = data.lyft[i].type
                  currency.innerText = "$ " + data.lyft[i].currency + " " + data.lyft[i].fare
                  eta.innerText = "Arrival Time " + data.lyft[i].eta/60 + " Mins"
                  div.classList.add("lyft_ride", data.lyft[i].type.replace(/\s/g, ''))
                  div.style.border = "1px solid pink"
                  div.appendChild(h3)
                  div.appendChild(currency)
                  div.appendChild(eta)
                  result.appendChild(div)

                  if (possible_rides.includes(data.lyft[i].type)) {
                    var request_button = document.createElement("button")
                    var request_link = document.createElement("a")
                    var ride_id = data.lyft[i].type.toLowerCase().replace(/\s/g, '_')
                    request_link.setAttribute('href', 'https://lyft.com/ride?id=' + ride_id + '&pickup[latitude]=' + start_lat + '&pickup[longitude]=' + start_lon + '&destination[latitude]=' + end_lat + '&destination[longitude]=' + end_lon)
                    request_link.setAttribute('target', '_blank')
                    request_button.innerText = 'Request my ' + data.lyft[i].type
                    request_link.appendChild(request_button)
                    div.appendChild(request_link)

                  }else {

                  }


                }
            }

            function displayInAscOrder(data) {

              var results = []


              for (var i = 0; i < data.uber.length; i++) {
                results.push(data.uber[i])
              }

              for (var i = 0; i < data.lyft.length; i++) {
                results.push(data.lyft[i])
              }

              sorted_results = results.sort(function(a, b) {
                return a.fare - b.fare
              })

              var result = document.getElementById('div_result')
              for (var i = 0; i < sorted_results.length; i++) {

                var div = document.createElement("div")
                var h3 = document.createElement("h3")
                var fare = document.createElement("p")
                var currency = document.createElement("p")
                var eta = document.createElement("p")
                var request_link = document.createElement("a")
                var request_button = document.createElement("button")

                h3.innerText = sorted_results[i].type
                currency.innerText = "$ " + sorted_results[i].currency + " " + sorted_results[i].fare
                eta.innerText = "Arrival Time " + sorted_results[i].eta/60 + " Mins"
                div.classList.add("lyft_ride", sorted_results[i].type.replace(/\s/g, ''))
                div.style.border = "1px solid pink"
                div.appendChild(h3)
                div.appendChild(currency)
                div.appendChild(eta)
                result.appendChild(div)

                if (sorted_results[i].type.charAt(0) === 'L' || sorted_results[i].type === 'LyftPlus') {
                  var request_button = document.createElement("button")
                  var request_link = document.createElement("a")
                  var ride_id = data.lyft[i].type.toLowerCase().replace(/\s/g, '_')
                  request_link.setAttribute('href', 'https://lyft.com/ride?id=' + ride_id + '&pickup[latitude]=' + start_lat + '&pickup[longitude]=' + start_lon + '&destination[latitude]=' + end_lat + '&destination[longitude]=' + end_lon)
                  request_link.setAttribute('target', '_blank')
                  request_button.innerText = 'Request Lyft'
                  request_link.appendChild(request_button)
                  div.appendChild(request_link)

                } else if (sorted_results[i].type.charAt(0) === 'u' || sorted_results[i].type.charAt(0) === 'T' || sorted_results[i].type.charAt(0) === 'U' ) {
                  request_link.setAttribute('target', '_blank')
                  request_link.setAttribute('href', 'https://m.uber.com/?action=setPickup&pickup[latitude]=' + start_lat + '&pickup[longitude]=' + start_lon + '&pickup[formatted_address]=' + start_address + '&dropoff[latitude]=' + end_lat + '&dropoff[longitude]=' + end_lon + '&dropoff[formatted_address]=' + end_address)
                  request_button.innerText = 'Request UBER'
                  request_link.appendChild(request_button)
                  div.appendChild(h3)
                  div.appendChild(currency)
                  div.appendChild(eta)
                  div.appendChild(request_link)
                  result.appendChild(div)

                }

              }
          }

      </script>
